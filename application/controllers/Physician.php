<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Physician extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Physician_model');
    } 

    /*
     * Listing of physicians
     */
    function index()
    {
        $data['physicians'] = $this->Physician_model->get_all_physicians();

        $data['_view'] = 'physician/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new physician
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('physician_first_name','Physician First Name','required|max_length[30]');
		$this->form_validation->set_rules('physician_last_name','Physician Last Name','required|max_length[30]');
		$this->form_validation->set_rules('physician_street_address','Physician Street Address','required|max_length[60]');
		$this->form_validation->set_rules('physician_city','Physician City','required|max_length[30]');
		$this->form_validation->set_rules('physician_license_number','Physician License Number','required|max_length[12]');
		$this->form_validation->set_rules('physician_education_degree','Physician Education Degree','required|max_length[60]');
		$this->form_validation->set_rules('physician_specialization','Physician Specialization','required|max_length[30]');
		$this->form_validation->set_rules('physician_province_state_code','Physician Province State Code','required|integer');
		$this->form_validation->set_rules('physician_telephone','Physician Telephone','required|integer');
		$this->form_validation->set_rules('physician_email','Physician Email','required|max_length[30]|valid_email');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'physician_first_name' => $this->input->post('physician_first_name'),
				'physician_last_name' => $this->input->post('physician_last_name'),
				'physician_street_address' => $this->input->post('physician_street_address'),
				'physician_city' => $this->input->post('physician_city'),
				'physician_license_number' => $this->input->post('physician_license_number'),
				'physician_education_degree' => $this->input->post('physician_education_degree'),
				'physician_specialization' => $this->input->post('physician_specialization'),
				'physician_province_state_code' => $this->input->post('physician_province_state_code'),
				'physician_telephone' => $this->input->post('physician_telephone'),
				'physician_email' => $this->input->post('physician_email'),
            );
            
            $physician_id = $this->Physician_model->add_physician($params);
            redirect('physician/index');
        }
        else
        {            
            $data['_view'] = 'physician/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a physician
     */
    function edit($physician_code)
    {   
        // check if the physician exists before trying to edit it
        $data['physician'] = $this->Physician_model->get_physician($physician_code);
        
        if(isset($data['physician']['physician_code']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('physician_first_name','Physician First Name','required|max_length[30]');
			$this->form_validation->set_rules('physician_last_name','Physician Last Name','required|max_length[30]');
			$this->form_validation->set_rules('physician_street_address','Physician Street Address','required|max_length[60]');
			$this->form_validation->set_rules('physician_city','Physician City','required|max_length[30]');
			$this->form_validation->set_rules('physician_license_number','Physician License Number','required|max_length[12]');
			$this->form_validation->set_rules('physician_education_degree','Physician Education Degree','required|max_length[60]');
			$this->form_validation->set_rules('physician_specialization','Physician Specialization','required|max_length[30]');
			$this->form_validation->set_rules('physician_province_state_code','Physician Province State Code','required|integer');
			$this->form_validation->set_rules('physician_telephone','Physician Telephone','required|integer');
			$this->form_validation->set_rules('physician_email','Physician Email','required|max_length[30]|valid_email');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'physician_first_name' => $this->input->post('physician_first_name'),
					'physician_last_name' => $this->input->post('physician_last_name'),
					'physician_street_address' => $this->input->post('physician_street_address'),
					'physician_city' => $this->input->post('physician_city'),
					'physician_license_number' => $this->input->post('physician_license_number'),
					'physician_education_degree' => $this->input->post('physician_education_degree'),
					'physician_specialization' => $this->input->post('physician_specialization'),
					'physician_province_state_code' => $this->input->post('physician_province_state_code'),
					'physician_telephone' => $this->input->post('physician_telephone'),
					'physician_email' => $this->input->post('physician_email'),
                );

                $this->Physician_model->update_physician($physician_code,$params);            
                redirect('physician/index');
            }
            else
            {
                $data['_view'] = 'physician/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The physician you are trying to edit does not exist.');
    } 

    /*
     * Deleting physician
     */
    function remove($physician_code)
    {
        $physician = $this->Physician_model->get_physician($physician_code);

        // check if the physician exists before trying to delete it
        if(isset($physician['physician_code']))
        {
            $this->Physician_model->delete_physician($physician_code);
            redirect('physician/index');
        }
        else
            show_error('The physician you are trying to delete does not exist.');
    }
    
}
